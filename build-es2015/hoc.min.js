var __assign=this&&this.__assign||Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};const React=require("react");const themeable_1=require("./themeable");const constants_1=require("./constants");const object_path_1=require("object-path");const memoize=require("memoizee");const getThemeableFn=(theme)=>themeable_1.themeable(theme);const getThemeableFnDefaultMemoizeeOpts={length:1,max:10};
const hocDefaults={themeKey:"theme",themeProp:"t"};
function themeDecorator({themeKey,themeProp,memoizeeOpts,contextPath}={}){const getThemeableFnMemoized=memoize(getThemeableFn,memoizeeOpts||getThemeableFnDefaultMemoizeeOpts);const passedThemePropToChild=themeProp||hocDefaults.themeProp;return(WrappedComponent)=>{const TargetComponent=WrappedComponent;const HOCThemeable=(props,contextArg)=>{const passedThemeableFn=getThemeableFnMemoized(contextPath?object_path_1.get(contextArg,contextPath):props[themeKey||hocDefaults.themeKey]);const passedHOCProps=
{[passedThemePropToChild]:passedThemeableFn};return React.createElement(TargetComponent,__assign({},passedHOCProps,props))};HOCThemeable.contextTypes={[constants_1.THEME_PROVIDER_CONTEXT_KEY]:React.PropTypes.object};return HOCThemeable}}exports.themeDecorator=themeDecorator;