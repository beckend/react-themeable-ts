{"version":3,"sources":["../src/themeable.ts"],"names":[],"mappings":"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","file":"themeable.js","sourcesContent":["import * as cn from 'classnames';\n\nconst assign: typeof _.assign = require('lodash.assign');\nconst isObject: typeof _.isObject = require('lodash.isobject');\nconst isFunction: typeof _.isFunction = require('lodash.isfunction');\nconst size: typeof _.size = require('lodash.size');\n\n/**\n * Memoizee\n */\nconst memoize = require('memoizee');\nconst themeableDefaultMemoizeeOpts = {\n  length: false,\n};\n\n/**\n * The main function that is being returned, if theme arg is not empty\n */\nexport interface IStaticFnReturn {\n  (...payload: any[]): IStaticFnOptionalReturn;\n  (payload?: any): {};\n}\nexport interface IStaticFnOptionalReturn {\n  className?: string;\n  style?: {\n    [name: string]: any;\n  };\n}\n// Aphrodite decorator\nexport interface IClassNameDecoratorFn {\n  (...payload: any[]): any[];\n}\n/**\n * The main function\n */\nexport interface IStaticFn {\n  // Aphrodite\n  (payload: [any, IClassNameDecoratorFn]): IStaticFnReturn;\n  // Normal\n  (payload: any): IStaticFnReturn;\n  // Empty\n  (): IStaticFnReturn;\n}\n\nconst truthy = (x: any) => x;\nexport const themeable: IStaticFn = (input?: any) => {\n  const [theme, classNameDecorator] = Array.isArray(input) && input.length === 2 ?\n    input :\n    [input, null];\n\n  // Empty object if no theme\n  if (!isObject(theme)) {\n    return () => ({});\n  }\n\n  // Class decorator version (Aphrodite etc.)\n  if (isFunction(classNameDecorator)) {\n    const classNameDecoratorFn = (...names: any[]) => {\n      if (names.length < 1) {\n        return {};\n      }\n      const styles = names\n        .map((name) => theme[name])\n        .filter(truthy);\n\n      if (!styles[0]) {\n        return {} as any;\n      }\n\n      return {\n        className: classNameDecorator(...styles),\n      };\n    };\n\n    return memoize(\n      classNameDecoratorFn,\n      themeableDefaultMemoizeeOpts\n    ) as typeof classNameDecoratorFn;\n  }\n\n  // Mix of className and style version\n  const regularFn = (...names: any[]) => {\n    if (names.length < 1) {\n      return {};\n    }\n\n    // Will be merged if object is found\n    // tslint:disable-next-line\n    let styleObj: React.CSSProperties = {};\n    // Will be invoked through classnames\n    const classNamesArgsArr: any[] = [];\n    names.forEach((value) => {\n      // Get from theme object\n      const themeValue = theme[value];\n      // Array check first because it's also an object\n      if (Array.isArray(themeValue)) {\n        classNamesArgsArr.push(themeValue);\n      } else if (isObject(themeValue)) {\n        // Will be treated as style\n        // Mutates object\n        assign(styleObj, themeValue);\n      } else {\n        classNamesArgsArr.push(themeValue);\n      }\n    });\n    const returned: IStaticFnOptionalReturn = {};\n\n    if (size(styleObj) > 0) {\n      returned.style = styleObj;\n    }\n    const finalClassname = cn(classNamesArgsArr);\n    if (finalClassname.length > 0) {\n      returned.className = finalClassname;\n    }\n    return returned;\n  };\n\n  return memoize(\n    regularFn,\n    themeableDefaultMemoizeeOpts\n  ) as typeof regularFn;\n};\n"],"sourceRoot":"/source/"}